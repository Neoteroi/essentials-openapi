@startuml "Components schemas"
/'
This diagram has been generated by essentials-openapi
https://github.com/Neoteroi/essentials-openapi

Most likely, it is not desirable to edit this file by hand!
'/
top to bottom direction


class Category {
    creationTime: string(date-time)
    description: string &#124; null
    eTag: string
    id: string &#124; null
    name: string
    releases: Array of Release
    updateTime: string(date-time)
}

class Country {
    countryCode: string &#124; null
    id: string &#124; null
    name: string
}

class CreateOrganizationsBoundInput {
    items: Array of OrganizationBoundInput
}

class CreateReleaseInput {
    categoryId: string
    countries: Array of string
    description: string &#124; null
    name: string &#124; null
}

class CreateReleaseNodeInput {
    fileId: string(uuid)
    fileName: string
    fileSize: integer(int32)
    fileType: string
}

class CreateReleaseOutput {
    id: string(uuid)
}

class CurrentRelease {
    categoryId: string &#124; null
    countryCode: string &#124; null
    countryName: string &#124; null
    publishTime: string(date-time)
    releaseId: string(uuid)
    releaseName: string &#124; null
}

class DeleteReleaseNodeInput {
    id: string(uuid)
}

class FileDownloadStats {
    uniqueDownloads: integer(int32)
}

class FileUrl {
    url: string &#124; null
}

class GenericError {
    code: integer(int32)
    message: string
}

class HealthCheck {
    alive: boolean
    regionName: string &#124; null
    timestamp: string(date-time)
}

class InitializeUploadInput {
    fileName: string &#124; null
    fileSize: integer(int32)
    fileType: string &#124; null
    releaseId: string(uuid)
}

class InitializeUploadOutput {
    baseURL: string &#124; null
    fileId: string &#124; null
    fileName: string &#124; null
    token: string &#124; null
}

class MetaData {
    buildNumber: string &#124; null
    contactEmail: string &#124; null
    version: string &#124; null
}

class NodeInfo {
    creationTime: string(date-time)
    eTag: string
    extension: string
    icon: string
    id: string(uuid)
    name: string
    size: integer(int32)
    type: string
    updateTime: string(date-time)
}

class OrganizationBoundInput {
    id: string(uuid)
    name: string &#124; null
}

class ProfessionalContext {
    membership: Array of ProfessionalMembership
    signature: string &#124; null
}

class ProfessionalMembership {
    brandNames: Array of string
    categoryId: string &#124; null
    id: string(uuid)
    marketCodes: Array of string
    organizationBrands: Array of string(uuid)
    organizationId: string(uuid)
    organizationMarkets: Array of string(uuid)
    organizationName: string &#124; null
    organizationNumber: string &#124; null
    role: string &#124; null
    scope: string &#124; null
}

class PublishReleaseInput {
    eTag: string &#124; null
    sendEmailNotifications: boolean
}

class Release {
    category: Category
    categoryId: string &#124; null
    countries: Array of ReleaseCountry
    creationTime: string(date-time)
    description: string &#124; null
    draft: boolean
    eTag: string
    history: Array of ReleaseHistory
    id: string(uuid)
    name: string
    nodes: Array of ReleaseNode
    organizations: Array of ReleaseOrganization
    requestedNotification: boolean
    updateTime: string(date-time)
}

class ReleaseCountry {
    country: Country
    countryId: string &#124; null
    release: Release
    releaseId: string(uuid)
}

class ReleaseHistory {
    data: string &#124; null
    description: string
    id: string(uuid)
    release: Release
    releaseId: string(uuid)
    timeStamp: string(date-time)
    user: string
}

class ReleaseNode {
    id: string(uuid)
    node: NodeInfo
    nodeId: string(uuid)
    release: Release
    releaseId: string(uuid)
}

class ReleaseNodeDownload {
    accessGrantedByOrganizationId: string(uuid) &#124; null
    id: string(uuid)
    node: NodeInfo
    nodeId: string(uuid)
    release: Release
    releaseId: string(uuid)
    timeStamp: string(date-time)
    userEmail: string
    userId: string
}

class ReleaseNodeDownloadPaginatedSet {
    items: Array of ReleaseNodeDownload
    total: integer(int64)
}

class ReleaseOrganization {
    displayName: string &#124; null
    organizationId: string(uuid)
    release: Release
    releaseId: string(uuid)
}

class ReleasePaginatedSet {
    items: Array of Release
    total: integer(int64)
}

class UpdateReleaseInput {
    categoryId: string
    countries: Array of string
    description: string &#124; null
    eTag: string &#124; null
    id: string(uuid)
    name: string &#124; null
}



Category --> Release

CreateOrganizationsBoundInput --> OrganizationBoundInput

ProfessionalContext --> ProfessionalMembership

Release --> Category

Release --> ReleaseCountry

Release --> ReleaseHistory

Release --> ReleaseNode

Release --> ReleaseOrganization

ReleaseCountry --> Country

ReleaseCountry --> Release

ReleaseHistory --> Release

ReleaseNode --> NodeInfo

ReleaseNode --> Release

ReleaseNodeDownload --> NodeInfo

ReleaseNodeDownload --> Release

ReleaseNodeDownloadPaginatedSet --> ReleaseNodeDownload

ReleaseOrganization --> Release

ReleasePaginatedSet --> Release

@enduml